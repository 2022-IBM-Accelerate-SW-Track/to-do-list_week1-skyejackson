{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\skyej\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\skyej\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\skyej\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\skyej\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\skyej\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\skyej\\\\Week2\\\\to-do-list_week1-skyejackson\\\\src\\\\component\\\\AddTodo.js\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\n\nvar AddTodo = /*#__PURE__*/function (_Component) {\n  _inherits(AddTodo, _Component);\n\n  // A local react state of the this component with a content property set to nothing.\n  function AddTodo() {\n    var _this;\n\n    _classCallCheck(this, AddTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTodo).call(this));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        content: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.content.trim()) {\n        _this.props.addTodo(_this.state);\n\n        _this.setState({\n          content: \"\"\n        });\n      }\n    };\n\n    _this.state = {\n      content: \"\"\n    };\n    return _this;\n  } // The handleChange function updates the react state with the new input value provided from the user.\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\n  // into the text field.\n\n\n  _createClass(AddTodo, [{\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        // 1. The return statement should include a text field input with the handleChange function from above that\n        // is passed into an onChange event.\n        // 2. The return should also include a button with the handleSubmit function from above that is passed into\n        // an OnClick event.\n        // 3. The value of the text field also should reflect the local state of this component.\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          label: \"Add New Item\",\n          variant: \"outlined\",\n          onChange: this.handleChange,\n          value: this.state.content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          onClick: this.handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 1\n          }\n        }, \"Add\"))\n      );\n    }\n  }]);\n\n  return AddTodo;\n}(Component);\n\nexport default AddTodo;","map":{"version":3,"names":["React","Component","Button","TextField","AddTodo","handleChange","event","setState","content","target","value","handleSubmit","preventDefault","state","trim","props","addTodo","marginLeft"],"sources":["C:/Users/skyej/Week2/to-do-list_week1-skyejackson/src/component/AddTodo.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nclass AddTodo extends Component {\r\n    // A local react state of the this component with a content property set to nothing.\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        content: \"\",\r\n      };\r\n    }\r\n    // The handleChange function updates the react state with the new input value provided from the user.\r\n    // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\r\n    // into the text field.\r\n    handleChange = (event) => {\r\n      this.setState({\r\n        content: event.target.value,\r\n      });\r\n    };\r\n    // The handleSubmit function collects the forms input and puts it into the react state.\r\n    // event.preventDefault() is called to prevents default event behavior like refreshing the browser.\r\n    // this.props.addTodo(this.state) passes the current state (or user input) into the addTodo function defined\r\n    // in the Home.js file which then adds the input into the list.\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (this.state.content.trim()) {\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n          content: \"\",\r\n        });\r\n      }\r\n    };\r\n    render() {\r\n      return (\r\n        // 1. The return statement should include a text field input with the handleChange function from above that\r\n        // is passed into an onChange event.\r\n        // 2. The return should also include a button with the handleSubmit function from above that is passed into\r\n        // an OnClick event.\r\n        // 3. The value of the text field also should reflect the local state of this component.\r\n        <div>\r\n        <TextField\r\n        label=\"Add New Item\"\r\n        variant=\"outlined\"\r\n        onChange={this.handleChange}\r\n        value={this.state.content}\r\n/>\r\n<Button\r\n  style={{ marginLeft: \"10px\" }}\r\n  onClick={this.handleSubmit}\r\n  variant=\"contained\"\r\n  color=\"primary\"\r\n>\r\n  Add\r\n</Button>\r\n \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AddTodo;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;;IACMC,O;;;EACF;EACA,mBAAc;IAAA;;IAAA;;IACZ;;IADY,MASdC,YATc,GASC,UAACC,KAAD,EAAW;MACxB,MAAKC,QAAL,CAAc;QACZC,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;MADV,CAAd;IAGD,CAba;;IAAA,MAkBdC,YAlBc,GAkBC,UAACL,KAAD,EAAW;MACxBA,KAAK,CAACM,cAAN;;MACA,IAAI,MAAKC,KAAL,CAAWL,OAAX,CAAmBM,IAAnB,EAAJ,EAA+B;QAC7B,MAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKH,KAAxB;;QACA,MAAKN,QAAL,CAAc;UACZC,OAAO,EAAE;QADG,CAAd;MAGD;IACF,CA1Ba;;IAEZ,MAAKK,KAAL,GAAa;MACXL,OAAO,EAAE;IADE,CAAb;IAFY;EAKb,C,CACD;EACA;EACA;;;;;6BAmBS;MACP;QAAA;QACE;QACA;QACA;QACA;QACA;QACA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,SAAD;UACA,KAAK,EAAC,cADN;UAEA,OAAO,EAAC,UAFR;UAGA,QAAQ,EAAE,KAAKH,YAHf;UAIA,KAAK,EAAE,KAAKQ,KAAL,CAAWL,OAJlB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADA,eAOR,oBAAC,MAAD;UACE,KAAK,EAAE;YAAES,UAAU,EAAE;UAAd,CADT;UAEE,OAAO,EAAE,KAAKN,YAFhB;UAGE,OAAO,EAAC,WAHV;UAIE,KAAK,EAAC,SAJR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,SAPQ;MANF;IAwBD;;;;EAtDiBV,S;;AAyDpB,eAAeG,OAAf"},"metadata":{},"sourceType":"module"}