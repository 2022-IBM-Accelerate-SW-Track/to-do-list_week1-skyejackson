{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\skyej\\\\Week2\\\\to-do-list_week1-skyejackson\\\\src\\\\component\\\\todos.js\";\n\nimport React from \"react\";\nimport \"../component/todos.css\";\nimport { Card, CardContent, Grid, ListItemButton, ListItemText, Checkbox } from \"@mui/material\"; // 1. This component formats and returns the list of todos.\n// 2. Treat the question mark like an if statement.\n// If the todos array has items in the list [todos.length], we want to return the list\n// Else, return a message saying \"You have no todo's left\"\n// 3. The map function is called to assign each array item with a key\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\n// a key, and it's own card shown in the UI\n\nvar Todos = function Todos(_ref) {\n  var todos = _ref.todos;\n  var todoList = todos.length ? todos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: todo.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        padding: \"50px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, todo.content))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"You have no todo's left.\"); // Lastly, return the todoList constant that we created above to show all of the items on the screen.\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoCollection\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, todoList);\n};\n\nexport default Todos;","map":{"version":3,"names":["React","Card","CardContent","Grid","ListItemButton","ListItemText","Checkbox","Todos","todos","todoList","length","map","todo","id","padding","content"],"sources":["C:/Users/skyej/Week2/to-do-list_week1-skyejackson/src/component/todos.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../component/todos.css\";\r\nimport {Card,CardContent,Grid,ListItemButton,ListItemText,Checkbox,} from \"@mui/material\";\r\n// 1. This component formats and returns the list of todos.\r\n// 2. Treat the question mark like an if statement.\r\n// If the todos array has items in the list [todos.length], we want to return the list\r\n// Else, return a message saying \"You have no todo's left\"\r\n// 3. The map function is called to assign each array item with a key\r\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\r\n// a key, and it's own card shown in the UI\r\nconst Todos = ({ todos }) => {\r\n    const todoList = todos.length ? (\r\n      todos.map((todo) => {\r\n        return (\r\n          <Grid key={todo.id}>\r\n            <Card>\r\n              {/* Remember, we set the local state of this todo item when the user submits the form in \r\n              AddTodo.js. All we need to do is return the todo list item */}\r\n              <CardContent>\r\n                <span style={{ padding: \"50px\" }}>{todo.content}</span>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })\r\n    ) : (\r\n      <p>You have no todo's left.</p>\r\n    );\r\n    // Lastly, return the todoList constant that we created above to show all of the items on the screen.\r\n    return (\r\n      <div className=\"todoCollection\" style={{ padding: \"10px\" }}>\r\n        {todoList}\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default Todos;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAAQC,IAAR,EAAaC,WAAb,EAAyBC,IAAzB,EAA8BC,cAA9B,EAA6CC,YAA7C,EAA0DC,QAA1D,QAA0E,eAA1E,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;EAAA,IAAZC,KAAY,QAAZA,KAAY;EACzB,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GACfF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;IAClB,oBACE,oBAAC,IAAD;MAAM,GAAG,EAAEA,IAAI,CAACC,EAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAGE,oBAAC,WAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAM,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX,CAAb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAmCF,IAAI,CAACG,OAAxC,CADF,CAHF,CADF,CADF;EAWD,CAZD,CADe,gBAef;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAfF,CADyB,CAkBzB;;EACA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAgC,KAAK,EAAE;MAAED,OAAO,EAAE;IAAX,CAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGL,QADH,CADF;AAKH,CAxBD;;AA0BA,eAAeF,KAAf"},"metadata":{},"sourceType":"module"}